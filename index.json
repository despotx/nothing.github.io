[{"categories":["笔记分享"],"contents":"1. 序言 最近求职面试，最大的问题便是和面试官面对面坐着时无话可说。 自己平时也比较爱折腾，喜欢尝试各种东西。但是，没有怎么记录下来，过了一段时间，再提起其中的某些细节，就开始阿巴阿巴；要么，就是笔记记得太散，分散在多个设备、多款软件。需要的时候总会各种凌乱。因此，就想着能不能养成一直在某个地方进行记录的习惯，最好能放到云平台上。可以不用担心换设备和软件的问题。于是，就想着要不要弄一个网站来做这件事情。最后发现，hugo的操作比较简洁方便，github也提供托管功能。又好又省,可以将时间精力更多的分配到内容制作上。最后就决定使用hugo和github来弄。这里记录了这一过程，会介绍该过程遇到的问题和自己的理解。对想快速搭建自己的个人网站且不爱看或不方便看文档的同学会很有帮助。\n2. github 创建仓库 2.1 仓库创建与开启page功能 仓库创建\n仓库名任意，没有特别的格式要求，只要不与原来的冲突即可。 一些博客的说法是格式为*.github.io。经测试，我发现这种格式和没有格式的仓库 提供网站服务时并没有什么区别。 免费的github pages需要公开仓库。 开启page功能\n具体来说时，挂载提供网页服务的分支，初始值为none。\n进入仓库页面，如下图进行操作。\n选择Settings。 点击Pages。 选择分支。 选择仓库中哪个目录作为网站的根目录。仓库不全是页面文件时，可更换目录，保持仓库看起来清爽。 **为了方便使用hugo生成和部署，不推荐更换。**不然，在生成静态文件后，还要在本地仓库建立docs目录， 然后，将所有静态文件（public下）拷贝到docs目录，然后再更新远程仓库。 可访问的网站根链接。设置完前面几步后，需要稍微等以下，才能刷新出这个信息。从仓库到网站存在延迟。 2.2 仓库和网站的映射 根链接： 代码仓库\nhttps://github.com/user_name/repo_name/ 网站\nhttps://user_name.github.io/repo_name/（由上一步中决定是否还有前缀） 注意，以下使用的地址或链接均是相对根链接的。\n输入网址/path时，会到仓库的/path目录取依次查找相关的文件：\n如果存在index.html，则只会使用index.html。 如果存在README.md，则会使用README.md。会将有效的目录作为链接+README.md的内容一并返回（垂直排列）。 如果都不存在则会报404错误。 如上图，输入/时，会显示/index.html的内容；输入/sub/时，会列出/的链接和显示/sub/README.md的内容，因为/可以返回内容，如下图所示；输入/sub1/时，报404错误。\n上图为/sub/返回的结果。其中，上面部分为链接（上一级目录可以渲染，为根目录，目录名称为test）,下面部分为/sub/README.md的内容。\n2.3 注意事项与tips 可自定义404页面：创建404.index置于仓库根目录下。 可通过网站完整链接访问到其他资源，比如重要的图片资源。 在Markdown文件中使用图片资源时，需要手动加网站根目录作为前缀。 3. hugo安装和使用以及网站部署到github Pages Hugo中文文档 (gohugo.org)\n可根据上述文档，下载和安装hugo，以及简单使用，这个过程超级简单。\n这个链接里包含了下载、安装、使用、以及部署到github Pages的基本操作，下面不再赘述。主要介绍一些盲点。\n3.1 本地创建工程 hugo new site your_site_path\t# 新建工程，路径为绝对的文件路径 工程根目录如下图。新建的网站根目录不存在public文件夹。\n需要关注的目录/文件有：\narchetypes 存在模板文件default.md。当使用hugo提供的指令创建新贴时，会使用这个文件作为模板。需要注意的是，文件头（front matter)部分，默认带参数draft参数，true表示当前文件为草稿，就不会被发布。 具体支持哪些参数，可参考官方文档。这里提两个：\ncategories = [] tags = [] hugo在生成静态文件时，会自动生成对应的/categories/和/tags/两个目录以及这两个目录的页面。\ncontent 存放文章的地方。\nhugo new path/to/filename.md\t# 以content目录为根路径，创建文件path/to/filename.md, # 使用default.md中的数据，并替换其中的占位符。 public 存放hugo生成的静态网页文件的地方。\nstatic 存放静态文件，如图片等。这部分文件会在生成网页时一并拷贝到public目录下。\nthemes 主题存放位置。每个主题文件夹都是一个git仓库（直接从github上拉取）。\n在配置文件中使用参数theme来指定主题。hugo会使用theme的字符串值来匹配themes目录下的文件夹名。\n所以，theme的值，应为themes下想要使用的主题的文件夹名。\n皮肤列表 - Hugo中文文档 (gohugo.org)\nhugo.toml 配置文件。以下是几个关键的参数：\ntheme 设置主题。 baseURL 设置网站根链接。在生成网页时，会使用这个值作为每个页面链接的前缀。如文章文件路径为 content/post/helloworld.md，那么，其网站链接为baseURL/post/helloworld/。 需要注意的是，markdown文件中使用的链接，如超链接、图片链接等，hugo在生成静态网页 的时候不会进行处理。这意味着，相对链接或本地的绝对链接在部署到网上后，就会失效 tips 一般clone下来的theme都有一个exampleSite文件夹，是一个网站的完整配置。我一般直接使用这个文件夹的配置文件，\n主要关注这个文件夹下的config文件夹以及.toml文件。然后，再根据需要修改一些参数值，基本满足大部分需求。\n3.2 content hugo 会根据这个目录content下的md文件，创建对应的index.html文件。其对应关系如下：\npath/to/filename.md -\u0026gt; path/to/filename/index.html\n同时，会根据md文件的参数categories以及tags的值的集合来决定是否创建/categories/index.html和/tags/index.html文件及其内容；\n不需要用户手动处理。\n主题中，一般都会设置about、categories、tags的入口。比如，about，其链接地址为网站根地址/about，只需在content目录下，创建一个about.md文件，并填写内容即可。\n3.3 部署 由content的产生的文件以及static的文件都会放到网站根目录上。\n本地部署 静态文件链接为/相对static文件的相对地址。如static/img/test.png应写为/img/test.png\n如果想引用md文件，则使用相对content的文件路径，去掉.md后缀。如content/helloworld.md应写为/helloworld/\nhugo server\t# 启动本地服务，默认端口为1313，访问链接为http://localhost:1313/， # 需要将此链接作为baseURL github pages部署 为了保证仓库根目录简洁\n不建议将大量md文件直接放到content目录下。 不建议将图片直接放到static目录下。 将本地部署的1. 2.内容，都加上网站跟地址作为前缀。\nhugo\t# 生成网页文件到public目录，baseURL为访问的github pages的网站地址。 # github端，使用/（root)来提供pages服务的情况下 cd public\t# 进入生成的网页文件所在的目录 # github端，使用/docs来提供pages服务的情况下 cp public/* local_repo/docs # 拷贝网页文件 cd local_repo # 同步仓库 git add . git commit -m \u0026#34;comment\u0026#34; git push\t# 将静态文件推送到git仓库，前提是仓库已经建立连接，初始push时，使用-u参数。 push完成后，仓库更新到网站更新存在延迟。\n4 总结 主要为几个目录/文件映射关系\nhugo工程与public content/path/to/filename.md \u0026lt;-\u0026gt; public/path/to/filename/index.html static/path/to/file \u0026lt;-\u0026gt; public/path/to/file public与github仓库 这个主要考虑，用户想要把public放到github仓库的哪个位置。github Pages只提供了两个选项。一是/（root)，即根目录；二是/docs,需要在根目录下创建一个docs文件夹，然后把public里的文件拷贝过去。然后再同步仓库。 github仓库目录与网站目录 网站链接分割为：网站目录/相对路径， github仓库链接为：仓库根链接[/docs]/相对路径。如果用户开放pages的目录不为根目录，则链接存在/docs。 上面两个相对路径是完全一致的。 这是默认情况下的，如果可以更改某些设置达到想要的映射效果，请忽略这部分内容。\n","date":"2023-10-14T22:27:37+08:00","permalink":"https://despotx.github.io/orion/post/%E4%BD%BF%E7%94%A8hugo%E5%92%8Cgithub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/","section":"post","tags":null,"title":"使用hugo和github搭建个人博客网站"},{"categories":[],"contents":"邮箱号：wsx_dx1112@163.com\n","date":"2023-10-14T15:54:54+08:00","permalink":"https://despotx.github.io/orion/contact/","section":"","tags":null,"title":"Contact"},{"categories":[],"contents":"笔者自述 @DespotX\n自负，傲娇 太难的做不了，太简单的不想做。无以立命，无以成事。\n信奉王阳明先生的“心学”，相信万物有灵。但从不深究，甚至没读过其理论。 我是谁 我是什么都浅尝辄止的一个人。我喜欢人文历史、社会科学、计算机骇客技术。但 是，都是表面功夫，道行太浅。爱无拘无束、天马行空般畅游于自己的内心世界；喜欢思 考，把自己关起门来，在精神的宇宙中遨游是一件非常奇妙的事。 我不是什么圣人、完人。我没有三头六臂、没有通天本领，更没有高洁的品格。我就 是一个纯粹的普通人，普通到甚至会有很多人都会来质疑我一个无名之辈为何大言不惭地 在此自我介绍。慕强、功利、自卑、懦弱、欺软怕硬、鼠目寸光、讨好型人格、咸鱼、心机...， 我身上的标签很多。但是，我绝对相信这世界上的每个人都是独一无二的，没有任何一个人 是多余的。 我也时常跳出来，以旁观者的身份审视自己：呵，自以为是的生命！明白“本来无一物， 何处惹尘埃”，也懂得“有情饮水饱，无爱催人老”。 我要干什么 我之所以选择写点东西。一是因为我的思维很扩散，很多奇思妙想转瞬即逝，我想抓住 它们；二是希望我的所思所想，以及一些浅薄的见解，能够帮助到同样困惑的你。 我不期望我的文字能有多少作用，多大的能量；也不期望人人都认可。这是世界本就是 多元的。大千世界，没有绝对的真理，更不存在万能钥匙一说。每一把锁，都需要一把精心 制作的钥匙才能开启。我希望我的文字能帮你铸成解开你现实生活中或心中的锁。 respect 才疏学浅、见识浅薄，偏驳之处，还望海涵。 ","date":"2023-10-14T15:18:21+08:00","permalink":"https://despotx.github.io/orion/about/","section":"","tags":null,"title":"About"}]